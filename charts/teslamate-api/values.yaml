# Default values for teslamate-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  # https://hub.docker.com/r/tobiasehlert/teslamateapi/tags
  repository: tobiasehlert/teslamateapi
  pullPolicy: Always
  tag: "1.20.2"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

env: {}
  #- name: DATABASE_USER
  #  value: "teslamate"
  #- name: DATABASE_NAME
  #  value: "teslamate"
  #- name: DATABASE_HOST
  #  value: "database"
  #- name: MQTT_HOST
  #  value: "mosquitto"
  #- name: TZ
  #  value: "Europe/Berlin"

# A secret containing the environment variables to be added to the container
envFromSecret: 
  enabled: false
  name: teslamate-api
  envs:
    #DATABASE_PASS:
    #ENCRYPTION_KEY:
    #MQTT_PASSWORD:

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 101
  runAsGroup: 101
  fsGroup: 101

securityContext:
  privileged: false
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: teslamate-api.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: teslamate-api.local
  #    hosts:
  #      - teslamate-api.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

